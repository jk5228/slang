# The Slang syntax specification.                           Jason Kim, 7/12/2016

# TODO: allow precedence rules in parser generator?

# Production rules

: num str id + - * / ! && || == < >

prog     : stm*
stmLst   : stm*
stm*     < EMPTY
         | stm+
stm+     < stm
         | stm stm*
stm      : line ;
         | block
line     < funExp
         | assign
         | break
         | return
         | return exp
assign   : id = exp
         | arrAcc = exp
block    < funBlk
         | ifBlk
         | whileBlk
         | forBlk
funBlk   : def id ( idLst ) { stmLst }
ifBlk    : if ( exp ) { stmLst } else { stmLst }
whileBlk : while ( exp ) { stmLst }
forBlk   : for ( id in exp ) { stmLst }
idLst    : id*
id*      < EMPTY
         | id+
id+      < id
         | id , id+
exp      : ( exp )
         | prim
         | arrAcc
         | funExp
         | arrExp
         | arithExp
         | logExp
prim     : num
         | str
         | id
arrExp   : { expLst }
expLst   : exp*
exp*     < EMPTY
         | exp+
exp+     < exp
         | exp , exp+
arrAcc   : id [ exp ]
funExp   : id ( expLst )
arithExp : ( exp ) aOp2 exp
aOp2     : +
         | -
         | *
         | /
logExp   : lOp1 exp
         | ( exp ) l2op exp
lOp1     : !
lOp2     : &&
         | ||
         | ==
         | >
         | <